Prerequisite: Java8, gradle4.1+

This is demo project to illustrate how to run multiple microservices in single JVM
Follow the steps below to launch the microservices:
1) cd multiapp
2) ./gradlew clean; ./gradlew build; ./gradlew publishToMavenLocal (This may take a while as dependencies get resolved.)
3) To run all microservices (first, second and third in 1 process)
	~ cd launcher
	~ ./gradlew clean && ./gradlew build && ./gradlew publishToMavenLocal && ./gradlew bootRun
	
	This will launch ALL THREE microservices in single java process. You can use swagger docs for services:
	http://localhost:8110/first/swagger-ui.html
	http://localhost:8111/second/swagger-ui.html
	http://localhost:8112/third/swagger-ui.html
	
	You can change ports here /launcher/src/main/resources/application.properties
	
4) You can start individual microservices as different java processes (Usual Way)
	~ cd first/
	~ ./gradlew clean && ./gradlew build && ./gradlew publishToMavenLocal && ./gradlew bootRun
	
	You can change the port for first service here : /first/src/main/resources/application-dev.properties
	
	~ cd second
	~ ./gradlew clean && ./gradlew build && ./gradlew publishToMavenLocal && ./gradlew bootRun
	
	You can change the port for second service here : /second/src/main/resources/application-dev.properties

    ~ cd third
    ~ ./gradlew clean && ./gradlew build && ./gradlew publishToMavenLocal && ./gradlew bootRun

   	You can change the port for third service here : /third/src/main/resources/application-dev.properties

   	Observe the 3 processes you've started using netstat -plnt | grep java